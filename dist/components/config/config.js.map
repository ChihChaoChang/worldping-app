{"version":3,"sources":["../../../src/components/config/config.js"],"names":[],"mappings":"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","file":"config.js","sourcesContent":["import configTemplate from './config.html!text';\n\nimport _ from 'lodash' ;\n\nclass WorldPingConfigCtrl {\n  constructor($scope, $injector, backendSrv) {\n    this.backendSrv = backendSrv;\n\n    this.appEditCtrl.setPreUpdateHook(this.preUpdate.bind(this));\n    this.appEditCtrl.setPostUpdateHook(this.postUpdate.bind(this));\n\n    if (this.appModel.jsonData === null) {\n      this.appModel.jsonData = {};\n    }\n  }\n\n  preUpdate() {\n    var model = this.appModel;\n\n    // if the apiKey is being set, check and make sure that\n    // we have initialized our datasource and dashboards.\n    if (model.secureJsonData && model.secureJsonData.apiKey) {\n      model.jsonData.apiKeySet = true;\n\n      if (!model.jsonData.datasourceSet) {\n        return this.initDatasource().then(() => {\n          model.jsonData.datasourceSet = true;\n        });\n      }\n    }\n\n    return Promise.resolve();\n  }\n\n  postUpdate() {\n    if (!this.appModel.enabled) {\n      return Promise.resolve();\n    }\n\n    return this.appEditCtrl.importDashboards().then(() => {\n      return {\n        url: \"dashboard/db/worldping-home\",\n        message: \"worldPing app installed!\"\n      };\n    });\n  }\n\n  configureDatasource() {\n    this.appModel.jsonData.datasourceSet = false;\n    this.initDatasource().then(() => {\n      this.appModel.jsonData.datasourceSet = true;\n      console.log(\"datasource initialized\");\n    });\n  }\n\n  initDatasource() {\n    var self = this;\n    //check for existing datasource.\n    return self.backendSrv.get('/api/datasources').then(function(results) {\n      var foundGraphite = false;\n      var foundElastic = false;\n        _.forEach(results, function(ds) {\n          if (foundGraphite && foundElastic) { return; }\n          if (ds.name === \"raintank\") {\n            foundGraphite = true;\n          }\n          if (ds.name === \"raintankEvents\") {\n            foundElastic = true;\n          }\n        });\n      var promises = [];\n      if (!foundGraphite) {\n        // create datasource.\n        var graphite = {\n          name: 'raintank',\n          type: 'graphite',\n          url: 'api/plugin-proxy/raintank-worldping-app/api/graphite',\n          access: 'direct',\n          jsonData: {}\n        };\n        promises.push(self.backendSrv.post('/api/datasources', graphite));\n      }\n      if (!foundElastic) {\n        // create datasource.\n        var elastic = {\n          name: 'raintankEvents',\n          type: 'elasticsearch',\n          url: 'api/plugin-proxy/raintank-worldping-app/api/elasticsearch',\n          access: 'direct',\n          database: '[events-]YYYY-MM-DD',\n          jsonData: {\n            esVersion: 1,\n            interval: \"Daily\",\n            timeField: \"timestamp\"\n          }\n        };\n        promises.push(self.backendSrv.post('/api/datasources', elastic));\n      }\n      return Promise.all(promises);\n    });\n  }\n}\n\nWorldPingConfigCtrl.template = configTemplate;\n\nexport {\n  WorldPingConfigCtrl as ConfigCtrl\n};\n"]}