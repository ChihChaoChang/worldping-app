{"version":3,"sources":["../../../src/components/config/config.js"],"names":[],"mappings":"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","file":"config.js","sourcesContent":["import configTemplate from './config.html!text';\n\nimport _ from 'lodash' ;\n\nclass WorldPingConfigCtrl {\n  constructor($scope, $injector, backendSrv) {\n    this.backendSrv = backendSrv;\n\n    this.appEditCtrl.setPreUpdateHook(this.preUpdate.bind(this));\n    this.appEditCtrl.setPostUpdateHook(this.postUpdate.bind(this));\n\n    if (this.appModel.jsonData === null) {\n      this.appModel.jsonData = {};\n    }\n  }\n\n  preUpdate() {\n    var model = this.appModel;\n\n    // if the apiKey is being set, check and make sure that\n    // we have initialized our datasource and dashboards.\n    if (model.secureJsonData && model.secureJsonData.apiKey) {\n      model.jsonData.apiKeySet = true;\n\n      if (!model.jsonData.datasourceSet) {\n        return this.initDatasource().then(() => {\n          model.jsonData.datasourceSet = true;\n        });\n      }\n    }\n\n    return Promise.resolve();\n  }\n\n  postUpdate() {\n    if (!this.appModel.enabled) {\n      return Promise.resolve();\n    }\n\n    return this.appEditCtrl.importDashboards().then(() => {\n      return {\n        url: \"dashboard/db/worldping-home\",\n        message: \"worldPing app installed!\"\n      };\n    });\n  }\n\n  configureDatasource() {\n    this.appModel.jsonData.datasourceSet = false;\n    this.initDatasource().then(() => {\n      this.appModel.jsonData.datasourceSet = true;\n      console.log(\"datasource initialized\");\n    });\n  }\n\n  initDatasource() {\n    var self = this;\n    //check for existing datasource.\n    return self.backendSrv.get('/api/datasources').then(function(results) {\n      var foundGraphite = false;\n      var foundElastic = false;\n      _.forEach(results, function(ds) {\n        if (foundGraphite && foundElastic) { return; }\n        if (ds.name === \"raintank\") {\n          foundGraphite = true;\n        }\n        if (ds.name === \"raintankEvents\") {\n          foundElastic = true;\n        }\n      });\n      var promises = [];\n      if (!foundGraphite) {\n        // create datasource.\n        var graphite = {\n          name: 'raintank',\n          type: 'graphite',\n          url: 'api/plugin-proxy/raintank-worldping-app/api/graphite',\n          access: 'direct',\n          jsonData: {}\n        };\n        promises.push(self.backendSrv.post('/api/datasources', graphite));\n      }\n      if (!foundElastic) {\n        // create datasource.\n        var elastic = {\n          name: 'raintankEvents',\n          type: 'elasticsearch',\n          url: 'api/plugin-proxy/raintank-worldping-app/api/elasticsearch',\n          access: 'direct',\n          database: '[events-]YYYY-MM-DD',\n          jsonData: {\n            esVersion: 1,\n            interval: \"Daily\",\n            timeField: \"timestamp\"\n          }\n        };\n        promises.push(self.backendSrv.post('/api/datasources', elastic));\n      }\n      return Promise.all(promises);\n    });\n  }\n}\n\nWorldPingConfigCtrl.template = configTemplate;\n\nexport {\n  WorldPingConfigCtrl as ConfigCtrl\n};\n"]}