{"version":3,"sources":["../../../src/components/config/config.js"],"names":[],"mappings":"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","file":"config.js","sourcesContent":["import configTemplate from './config.html!text';\n\nclass WorldPingConfigCtrl {\n  constructor($scope, $injector, backendSrv) {\n    this.backendSrv = backendSrv;\n    var self = this;\n    this.appEditCtrl.setPreUpdateHook(this.preUpdate())\n\n    if (this.appModel.jsonData === null) {\n      this.appModel.jsonData = {};\n    }\n  }\n\n  preUpdate() {\n    var self = this;\n    return function() {\n      var promises = [];\n      //if the apiKey is being set, check and make sure that we have initialized our datasource and dashboards.\n      if (self.appModel.secureJsonData && self.appModel.secureJsonData.apiKey) {\n        self.appModel.jsonData.apiKeySet = true;\n        if (!self.appModel.jsonData.datasourceSet) {\n          promises.push(self.initDatasource().then(function() {\n            self.appModel.jsonData.datasourceSet = true;\n          }));\n        }\n        if (!self.appModel.jsonData.dashboardsLoaded) {\n          promises.push(self.fetchDashboards().then(function() {\n            self.appModel.jsonData.dashboardsLoaded = true;\n          }));\n        }\n      }\n      return Promise.all(promises)\n    }\n  }\n  \n  configureDatasource() {\n    var self = this;\n    this.ctrl.appModel.jsonData.datasourceSet = false;\n    this.initDatasource().then(function() {\n      self.ctrl.appModel.jsonData.datasourceSet = true;\n      console.log(\"datasource initialized\");\n    });\n  }\n\n  initDatasource() {\n    var self = this;\n    //check for existing datasource.\n    return self.backendSrv.get('/api/datasources').then(function(results) {\n      var found = false;\n      _.forEach(results, function(ds) {\n        if (found) { return; }\n        if (ds.name === \"raintank\") {\n          found = true;\n        }\n      });\n      if (!found) {\n        // create datasource.\n        var rt = {\n          name: 'raintank',\n          type: 'graphite',\n          url: 'api/plugin-proxy/worldping-app/api/graphite',\n          access: 'direct',\n          jsonData: {}\n        };\n        return self.backendSrv.post('/api/datasources', rt);\n      }\n    });\n  }\n\n  importDashboards() {\n    var self = this;\n    this.appModel.jsonData.dashboardsLoaded = false;\n    this.fetchDashboards().then(function() {\n      self.appModel.jsonData.dashboardsLoaded = true;\n    });\n  }\n\n  fetchDashboards() {\n    var self = this;\n    var dashboards = [\n      \"rt-endpoint-web\",\n      \"rt-endpoint-ping\",\n      \"rt-endpoint-dns\",\n      \"rt-endpoint-summary\",\n      \"rt-endpoint-comparison\",\n      \"rt-collector-summary\"\n    ];\n    var chain = Promise.resolve();\n    _.forEach(dashboards, function(dash) {\n      chain = chain.then(function() {\n        return self.backendSrv.get(\"public/plugins/worldping-app/dashboards/litmus/\"+dash+\".json\").then(function(loadedDash) {\n          return self.backendSrv.saveDashboard(loadedDash, {overwrite: true});\n        });\n      });\n    });\n    return chain\n  }\n}\n\nWorldPingConfigCtrl.template = configTemplate;\n\nexport {\n  WorldPingConfigCtrl as ConfigCtrl\n};\n"]}